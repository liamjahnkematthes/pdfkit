const AutoPDFGenerator = require('../lib/auto-pdf-generator');
const fs = require('fs');

// Sample data that would come from your N8N webhook/form
const retirementData = {
  name: 'Sarah Johnson',
  age: 42,
  income: 85000,
  savings: 250000,
  retireAge: 62,
  lifestyle: 'comfortable',
  email: 'sarah.johnson@example.com',
  phone: '+1-555-987-6543',
  summary: 'Based on your current savings trajectory and income, you are on track for a comfortable retirement. However, increasing your annual contributions by $3,000 would ensure you maintain your desired lifestyle throughout retirement. Consider maximizing your 401(k) employer match and exploring tax-advantaged accounts like a Roth IRA.',
  timestamp: new Date().toISOString()
};

// Alternative data for testing different scenarios
const alternativeData = {
  name: 'Michael Chen',
  age: 28,
  income: 65000,
  savings: 45000,
  retireAge: 65,
  lifestyle: 'luxury',
  email: 'michael.chen@example.com',
  phone: '+1-555-123-4567',
  summary: 'You have time on your side! Starting early gives you a huge advantage with compound growth. Focus on maximizing your 401(k) match first, then consider opening a Roth IRA for tax-free growth. Small increases in savings now will have a massive impact over 37 years.',
  timestamp: new Date().toISOString()
};

// Generate retirement analysis PDF
console.log('Generating retirement analysis PDF...');

const generator = new AutoPDFGenerator();
const doc = generator.createRetirement(retirementData, 'retirement-analysis-example.pdf');

doc.on('end', () => {
  console.log('âœ… Retirement analysis PDF generated: retirement-analysis-example.pdf');
  
  // Generate a second example with different data
  console.log('Generating second example...');
  const doc2 = generator.createRetirement(alternativeData, 'retirement-analysis-young-professional.pdf');
  
  doc2.on('end', () => {
    console.log('âœ… Second example generated: retirement-analysis-young-professional.pdf');
    
    // Show how to use the static method
    console.log('Generating using static method...');
    const doc3 = AutoPDFGenerator.retirement({
      name: 'Emma Wilson',
      age: 55,
      income: 120000,
      savings: 800000,
      retireAge: 60,
      lifestyle: 'luxury',
      email: 'emma.wilson@example.com',
      summary: 'You are in excellent shape for early retirement! Your savings rate has positioned you well. Consider reviewing your asset allocation to be slightly more conservative as you approach retirement, and explore healthcare coverage options for early retirement.'
    }, 'retirement-analysis-early-retirement.pdf');
    
    doc3.on('end', () => {
      console.log('âœ… Early retirement example generated: retirement-analysis-early-retirement.pdf');
      console.log('\nðŸ“Š All retirement analysis examples completed!');
      
      // Save sample data files for CLI usage
      fs.writeFileSync('examples/sample-retirement-data.json', JSON.stringify(retirementData, null, 2));
      fs.writeFileSync('examples/sample-young-professional.json', JSON.stringify(alternativeData, null, 2));
      
      console.log('ðŸ“„ Sample data files saved in examples/ directory');
      console.log('\nTo use with CLI:');
      console.log('node cli.js retirement examples/sample-retirement-data.json my-report.pdf');
    });
  });
});

// Example of how you'd integrate this with your N8N webhook
function handleN8NWebhook(formData) {
  // This function would be called by your N8N automation
  // with the form data from the HTML form
  
  const retirementData = {
    name: formData.Name || formData.name,
    age: parseInt(formData.Age || formData.age),
    income: parseInt(formData.Income || formData.income),
    savings: parseInt(formData.Savings || formData.savings), // Use the RealSavings value
    retireAge: parseInt(formData.RetireAge || formData.retireAge),
    lifestyle: formData.lifestyle,
    email: formData.userEmail,
    phone: formData.userPhone,
    summary: formData.summary || '', // Generated by your N8N AI analysis
    timestamp: new Date().toISOString()
  };

  // Generate PDF
  const generator = new AutoPDFGenerator();
  const doc = generator.createRetirement(retirementData, `retirement-${Date.now()}.pdf`);
  
  return doc; // Return the document stream for N8N to handle
}

// Export for use in other modules
module.exports = {
  generateRetirementPDF: handleN8NWebhook,
  AutoPDFGenerator
}; 